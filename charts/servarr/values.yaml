defaultPodOptions:
  securityContext:
    fsGroup: 65534

service:
  sonarr:
    controller: sonarr
    ports:
      http:
        port: 8989
  radarr:
    controller: radarr
    ports:
      http:
        port: 7878
  overseer:
    controller: overseer
    ports:
      http:
        port: 5055
  bazarr:
    controller: bazarr
    ports:
      http:
        port: 6767
  prowlarr:
    controller: prowlarr
    ports:
      http:
        port: 9696
persistence:
  config-sonarr:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      sonarr:
        main:
          - path: /config
  config-radarr:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      radarr:
        main:
          - path: /config
  config-bazarr:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      bazarr:
        main:
          - path: /config
  config-overseer:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 2Gi
    advancedMounts:
      overseer:
        main:
          - path: /app/config
  config-prowlarr:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      prowlarr:
        main:
          - path: /config
  media:
    enabled: false
    path: /media
ingress:
  sonarr:
    enabled: false
  radarr:
    enabled: false
  bazarr:
    enabled: false
  overseer:
    enabled: false
  prowlarr:
    enabled: false
controllers:
  sonarr:
    containers:
      main:
        image:
          repository: ghcr.io/home-operations/sonarr
          tag: 4.0.14.2938
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - /usr/bin/env
                  - bash
                  - -c
                  - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
                    read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
  radarr:
    containers:
      main:
        image:
          repository: ghcr.io/home-operations/radarr
          tag: 5.21.1.9799
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - /usr/bin/env
                  - bash
                  - -c
                  - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
                    read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
  overseer:
    containers:
      main:
        image:
          repository: sctx/overseerr
          tag: 1.34.0
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
  bazarr:
    containers:
      main:
        image:
          repository: linuxserver/bazarr
          tag: 1.5.1
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
          PUID: 1000
          PGID: 1000
  prowlarr:
    containers:
      main:
        image:
          repository: ghcr.io/home-operations/prowlarr
          tag: 1.33.0.4994
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - /usr/bin/env
                  - bash
                  - -c
                  - curl --fail localhost:9696/api/v1/system/status?apiKey=`IFS=\> && while
                    read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
